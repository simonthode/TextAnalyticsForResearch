#Clear work space
rm(list=ls())
#Load functions
source('./text_mining_functions.r')
#Set work directory
setwd("./")
source('./PDF to Text Files.py')
#Clear work space
rm(list=ls())
#Load functions
source('./text_mining_functions.r')
#Set work directory
setwd("./")
#Import the tidy data frame version of the text here
text_df <- read_excel('./tidy_df.xlsx')
#Import the tidy data frame version of the text here
text_df <- read_excel('./tidy_df.xlsx')
#Convert tidy text into a tibble
text_df <- tibble(filename = text_df$filename,
text = text_df$text)
#Check word frequency of the texts
Words_f(text_df, "text", freq = 50)
#Check word frequency of the texts
Words_frequency(text_df, "text", freq = 50)
#Load functions
source('./text_mining_functions.r')
#Check word frequency of the texts
Word_frequency(text_df, "text", freq = 50)
#Check bigrams of the text
Bigrams_f(text_df, "text", freq = 10)
#Check bigrams of the text
Bigram_frequency(text_df, "text", freq = 10)
#Clear work space
rm(list=ls())
#Load functions
source('./text_mining_functions.r')
#Set work directory
setwd("./")
#Import the tidy data frame version of the text here
text_df <- read_excel('./tidy_df.xlsx')
#Load functions
source('./text_mining_functions.r')
#Clear work space
rm(list=ls())
#Load functions
source('./text_mining_functions.r')
remove_words <- stopwords("en", source = "snowball")
remove_words <- append(remove_words, c(a:z)) #append individual letters to the remove words_list
remove_words <- append(remove_words, letters) #append individual letters to the remove words_list
#Clear work space
rm(list=ls())
#Load functions
source('./text_mining_functions.r')
#Set work directory
setwd("./")
#Import the tidy data frame version of the text here
text_df <- read_excel('./tidy_df.xlsx')
#Convert tidy text into a tibble
text_df <- tibble(filename = text_df$filename,
text = text_df$text)
#Check word frequency of the texts
Word_frequency(text_df, "text", freq = 50)
#Check bigrams of the text
Bigram_frequency(text_df, "text", freq = 10)
#Produce network graph of the text
create_network_graph(data = text_df, column = "text", search_term = "*", filter = 10, graph_type = "g2")
#Produce network graph of the text
create_network_graph(data = text_df, column = "text", search_term = "*", filter = 15, graph_type = "g1")
